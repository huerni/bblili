// Code generated by goctl. DO NOT EDIT.
// Source: search.proto

package searchclient

import (
	"context"

	"bblili/service/search/search"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserInfoRequest  = search.AddUserInfoRequest
	AddUserInfoResponse = search.AddUserInfoResponse
	AddVideoRequest     = search.AddVideoRequest
	AddVideoResponse    = search.AddVideoResponse
	GetContentRequest   = search.GetContentRequest
	GetContentResponse  = search.GetContentResponse
	Request             = search.Request
	Response            = search.Response
	UserInfo            = search.UserInfo
	VideoInfo           = search.VideoInfo

	Search interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
		AddUserInfo(ctx context.Context, in *AddUserInfoRequest, opts ...grpc.CallOption) (*AddUserInfoResponse, error)
		AddVideo(ctx context.Context, in *AddVideoRequest, opts ...grpc.CallOption) (*AddVideoResponse, error)
		GetContent(ctx context.Context, in *GetContentRequest, opts ...grpc.CallOption) (*GetContentResponse, error)
	}

	defaultSearch struct {
		cli zrpc.Client
	}
)

func NewSearch(cli zrpc.Client) Search {
	return &defaultSearch{
		cli: cli,
	}
}

func (m *defaultSearch) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}

func (m *defaultSearch) AddUserInfo(ctx context.Context, in *AddUserInfoRequest, opts ...grpc.CallOption) (*AddUserInfoResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.AddUserInfo(ctx, in, opts...)
}

func (m *defaultSearch) AddVideo(ctx context.Context, in *AddVideoRequest, opts ...grpc.CallOption) (*AddVideoResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.AddVideo(ctx, in, opts...)
}

func (m *defaultSearch) GetContent(ctx context.Context, in *GetContentRequest, opts ...grpc.CallOption) (*GetContentResponse, error) {
	client := search.NewSearchClient(m.cli.Conn())
	return client.GetContent(ctx, in, opts...)
}
